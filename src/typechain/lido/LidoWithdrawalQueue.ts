/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface LidoWithdrawalQueueInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "proxy__changeAdmin"
      | "proxy__getAdmin"
      | "proxy__getImplementation"
      | "proxy__getIsOssified"
      | "proxy__ossify"
      | "proxy__upgradeTo"
      | "proxy__upgradeToAndCall"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AdminChanged"
      | "BeaconUpgraded"
      | "ProxyOssified"
      | "Upgraded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "proxy__changeAdmin",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "proxy__getAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proxy__getImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proxy__getIsOssified",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proxy__ossify",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proxy__upgradeTo",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "proxy__upgradeToAndCall",
    values: [AddressLike, BytesLike, boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "proxy__changeAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxy__getAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxy__getImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxy__getIsOssified",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxy__ossify",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxy__upgradeTo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxy__upgradeToAndCall",
    data: BytesLike
  ): Result;
}

export namespace AdminChangedEvent {
  export type InputTuple = [previousAdmin: AddressLike, newAdmin: AddressLike];
  export type OutputTuple = [previousAdmin: string, newAdmin: string];
  export interface OutputObject {
    previousAdmin: string;
    newAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BeaconUpgradedEvent {
  export type InputTuple = [beacon: AddressLike];
  export type OutputTuple = [beacon: string];
  export interface OutputObject {
    beacon: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProxyOssifiedEvent {
  export type InputTuple = [];
  export type OutputTuple = [];
  export interface OutputObject {}
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpgradedEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface LidoWithdrawalQueue extends BaseContract {
  connect(runner?: ContractRunner | null): BaseContract;
  attach(addressOrName: AddressLike): this;
  deployed(): Promise<this>;

  interface: LidoWithdrawalQueueInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  proxy__changeAdmin: TypedContractMethod<
    [newAdmin_: AddressLike],
    [void],
    "nonpayable"
  >;

  proxy__getAdmin: TypedContractMethod<[], [string], "view">;

  proxy__getImplementation: TypedContractMethod<[], [string], "view">;

  proxy__getIsOssified: TypedContractMethod<[], [boolean], "view">;

  proxy__ossify: TypedContractMethod<[], [void], "nonpayable">;

  proxy__upgradeTo: TypedContractMethod<
    [newImplementation_: AddressLike],
    [void],
    "nonpayable"
  >;

  proxy__upgradeToAndCall: TypedContractMethod<
    [
      newImplementation_: AddressLike,
      setupCalldata_: BytesLike,
      forceCall_: boolean
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "proxy__changeAdmin"
  ): TypedContractMethod<[newAdmin_: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "proxy__getAdmin"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "proxy__getImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "proxy__getIsOssified"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "proxy__ossify"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "proxy__upgradeTo"
  ): TypedContractMethod<
    [newImplementation_: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "proxy__upgradeToAndCall"
  ): TypedContractMethod<
    [
      newImplementation_: AddressLike,
      setupCalldata_: BytesLike,
      forceCall_: boolean
    ],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "AdminChanged"
  ): TypedContractEvent<
    AdminChangedEvent.InputTuple,
    AdminChangedEvent.OutputTuple,
    AdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "BeaconUpgraded"
  ): TypedContractEvent<
    BeaconUpgradedEvent.InputTuple,
    BeaconUpgradedEvent.OutputTuple,
    BeaconUpgradedEvent.OutputObject
  >;
  getEvent(
    key: "ProxyOssified"
  ): TypedContractEvent<
    ProxyOssifiedEvent.InputTuple,
    ProxyOssifiedEvent.OutputTuple,
    ProxyOssifiedEvent.OutputObject
  >;
  getEvent(
    key: "Upgraded"
  ): TypedContractEvent<
    UpgradedEvent.InputTuple,
    UpgradedEvent.OutputTuple,
    UpgradedEvent.OutputObject
  >;

  filters: {
    "AdminChanged(address,address)": TypedContractEvent<
      AdminChangedEvent.InputTuple,
      AdminChangedEvent.OutputTuple,
      AdminChangedEvent.OutputObject
    >;
    AdminChanged: TypedContractEvent<
      AdminChangedEvent.InputTuple,
      AdminChangedEvent.OutputTuple,
      AdminChangedEvent.OutputObject
    >;

    "BeaconUpgraded(address)": TypedContractEvent<
      BeaconUpgradedEvent.InputTuple,
      BeaconUpgradedEvent.OutputTuple,
      BeaconUpgradedEvent.OutputObject
    >;
    BeaconUpgraded: TypedContractEvent<
      BeaconUpgradedEvent.InputTuple,
      BeaconUpgradedEvent.OutputTuple,
      BeaconUpgradedEvent.OutputObject
    >;

    "ProxyOssified()": TypedContractEvent<
      ProxyOssifiedEvent.InputTuple,
      ProxyOssifiedEvent.OutputTuple,
      ProxyOssifiedEvent.OutputObject
    >;
    ProxyOssified: TypedContractEvent<
      ProxyOssifiedEvent.InputTuple,
      ProxyOssifiedEvent.OutputTuple,
      ProxyOssifiedEvent.OutputObject
    >;

    "Upgraded(address)": TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
    Upgraded: TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
  };
}
